{"version":3,"sources":["components/utils/Navigbar.js"],"names":["Navigbar","useState","show1","setShow1","show2","setShow2","show3","setShow3","show4","setShow4","localStorage","getItem","loggedIn","useEffect","window","addEventListener","handleScroll","removeEventListener","prevScrollpos","pageYOffset","document","getElementById","classList","contains","currentScrollPos","style","top","sticky","collapseOnSelect","expand","variant","className","id","Brand","as","Link","to","src","im1","Toggle","aria-controls","Collapse","title","onMouseEnter","onMouseLeave","onTouchEnd","show","Item","eventKey","active","Divider","hresname","target","href","process","REACT_APP_ASTROWING"],"mappings":"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","file":"static/js/7.0aceb4bd.chunk.js","sourcesContent":["import { Navbar, Nav, NavDropdown, Button } from \"react-bootstrap\";\nimport React, { useEffect, useState } from \"react\";\nimport \"../../css/navbar.css\";\nimport im1 from \"../..//images/utils/logo-aero2.png\";\nimport { ExitToApp, PermIdentity } from '@material-ui/icons'\nimport { Link } from \"react-router-dom\";\n\nexport default function Navigbar() {\n  const [show1, setShow1] = useState(false);\n  const [show2, setShow2] = useState(false);\n  const [show3, setShow3] = useState(false);\n  const [show4, setShow4] = useState(false);\n  const [loggedIn, setLoggedIn] = useState(\n    localStorage.getItem(\"jwtToken\") ? true : false\n  );\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  let prevScrollpos = window.pageYOffset;\n\n  const handleScroll = () => {\n    if (\n      document\n        .getElementById(\"responsive-navbar-nav\")\n        ?.classList.contains(\"show\")\n    )\n      return;\n\n    const currentScrollPos = window.pageYOffset;\n\n    if (document.getElementById(\"navbar\")) {\n      if (prevScrollpos > currentScrollPos) {\n        document.getElementById(\"navbar\").style.top = \"0\";\n      } else {\n        document.getElementById(\"navbar\").style.top = \"-100px\";\n      }\n      prevScrollpos = currentScrollPos;\n    }\n  };\n\n  return (\n    <>\n      <Navbar\n        sticky=\"top\"\n        collapseOnSelect\n        expand=\"lg\"\n        variant=\"light\"\n        className=\"style top-bottom\"\n        id=\"navbar\"\n      >\n        <Navbar.Brand as={Link} to=\"/\" className=\"title-nav\">\n          <img className=\"logoimg\" src={im1} />\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <NavDropdown\n              title=\"Projects\"\n              id=\"basic-nav-dropdown\"\n              onMouseEnter={() => setShow4(true)}\n              onMouseLeave={() => setShow4(false)}\n              onTouchEnd={() => setShow4(!show3)}\n              show={show4}\n            >\n              <NavDropdown.Item as={Link} eventKey=\"featuredp\" active={false} to=\"/projects/featured\">Flagship Projects</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item as={Link} eventKey=\"otherp\" active={false} to=\"/projects\">Other Projects</NavDropdown.Item>\n            </NavDropdown>\n            <Nav.Link eventKey=\"blogs\" hresname=\"nav-items\" as={Link} to=\"/blogs\">\n              Blogs\n            </Nav.Link>\n            <NavDropdown\n              title=\"Events\"\n              id=\"basic-nav-dropdown\"\n              onMouseEnter={() => setShow3(true)}\n              onMouseLeave={() => setShow3(false)}\n              onTouchEnd={() => setShow3(!show3)}\n              show={show3}\n            >\n              <NavDropdown.Item eventKey=\"avishkar\" active={false} as={Link} to=\"/avishkar\">Avishkar</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item as={Link} eventKey=\"Prosang\" active={false} to=\"/prosang\">Prosang</NavDropdown.Item>\n            </NavDropdown>\n            <Nav.Link eventKey=\"blogs\" as={Link} to=\"/workshop\" className=\"nav-items\">\n              Jigyasa\n            </Nav.Link>\n            <Nav.Link\n              eventKey=\"sponsors\"\n              as={Link}\n              to=\"/achievements\"\n              className=\"nav-items\"\n            >\n              Achievements\n            </Nav.Link>\n            <NavDropdown\n              title=\"Our Team\"\n              id=\"basic-nav-dropdown\"\n              onMouseEnter={() => setShow1(true)}\n              onMouseLeave={() => setShow1(false)}\n              onTouchEnd={() => setShow1(!show1)}\n              show={show1}\n            >\n              <NavDropdown.Item as={Link} eventKey='faculty' active={false} to=\"/faculty\">\n                Faculty Corner\n              </NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item as={Link} eventKey='coordinators' active={false} to=\"/coordinators\">\n                Coordinators\n              </NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item as={Link} eventKey='non-tech' active={false} to=\"/non-tech\">\n                Non-Tech Members\n              </NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item as={Link} eventKey='alumni' active={false} to=\"/alumni\">Our Alumni</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item as={Link} eventKey='webteam' active={false} to=\"/webteam\">\n                Web Team\n              </NavDropdown.Item>\n            </NavDropdown>\n            <Nav.Link eventKey=\"collaborate\" as={Link} to=\"/collaborate\" className=\"nav-items\">\n              Collaborate\n            </Nav.Link>\n            <Nav.Link eventKey=\"spinoff\" as={Link} to=\"/spinoff\" className=\"nav-items\">\n              Spinoff\n            </Nav.Link>\n            <Nav.Link eventKey=\"sponsors\" as={Link} to=\"/sponsors\" className=\"nav-items\">\n              Sponsors\n            </Nav.Link>\n            <NavDropdown\n              title=\"More\"\n              id=\"basic-nav-dropdown\"\n              onMouseEnter={() => setShow2(true)}\n              onMouseLeave={() => setShow2(false)}\n              onTouchEnd={() => setShow2(!show2)}\n              show={show2}\n            >\n              {\n                loggedIn ?\n                  <NavDropdown.Item as={Link} to=\"/user/dashboard\" eventKey=\"dashboard\" active={false}>\n                    <PermIdentity className='mr-1' /> Dashboard\n                  </NavDropdown.Item>\n                  :\n                  <NavDropdown.Item as={Link} to=\"/user/login\" eventKey=\"login\" active={false}>\n                    Login <ExitToApp className='ml-3' />\n                  </NavDropdown.Item>\n              }\n              <NavDropdown.Divider />\n              <NavDropdown.Item as={Link} to=\"/news\" eventKey=\"news\" active={false}>\n                Updates\n              </NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n          <Button className='mr-sm-2 my-2 right-btn btn-danger' target=\"_blank\" href={process.env.REACT_APP_ASTROWING}>Astrowing MNNIT</Button>\n        </Navbar.Collapse>\n      </Navbar>\n    </>\n  );\n}\n"],"sourceRoot":""}